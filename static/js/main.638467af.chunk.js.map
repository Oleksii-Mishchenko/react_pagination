{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageItems","totalPages","Math","ceil","isTheFirstPage","isTheLastPage","pageNumbers","className","classNames","disabled","href","onClick","map","pageNumber","active","pageItem","items","App","totalItems","length","useState","setPerPage","setCurrentPage","firstItemNum","lastItemNum","itemsToShow","filter","item","index","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,UAEMC,EAAaC,KAAKC,KAAKP,EAAQC,GAC/BO,EAAiC,IAAhBN,EACjBO,EAAgBP,IAAgBG,EAChCK,EAAcjB,EAAW,EAAGY,GAElC,OACE,qCACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUL,IAHhB,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAI,WAAMZ,GACV,gBAAeM,EACfO,QAAS,WACFP,GACHL,EAAaD,EAAc,IAPjC,oBAeDQ,EAAYM,KAAI,SAAAC,GAAU,OACzB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQhB,IAAgBe,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPZ,EAAac,IALjB,SAQGA,KAdEA,MAmBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAMZ,GACV,gBAAeO,EACfM,QAAS,WACFN,GACHN,EAAaD,EAAc,IAPjC,uBAeJ,6BACGE,EAAUY,KAAI,SAAAG,GAAQ,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCzFXC,EAAQ3B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPwB,EAAgB,WAC3B,IAAMC,EAAaF,EAAMG,OACzB,EAA8BC,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOtB,EAAP,KAAoBwB,EAApB,KACMC,GAAgBzB,EAAc,GAAKD,EAAU,EAC7C2B,EAAe1B,EAAcD,EAAWqB,EAC1CA,EACApB,EAAcD,EAEZ4B,EAAcT,EAAMU,QAAO,SAACC,EAAMC,GACtC,OAAIA,GAASL,EAAe,GAAKK,GAASJ,EAAc,EAC/CG,EAGF,KAQT,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAT,EACA,IAJH,SAMG,IACAyB,EACA,MACAC,EACA,IAVH,KAYG,IACAN,EAbH,OAiBA,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOjC,EACPkC,SAjCkB,SAACC,GAC3BX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IA0BT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOsB,EACPrB,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACoC,GACbb,EAAea,IAEjBnC,UAAWyB,QC5EnBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.638467af.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n  pageItems: string[],\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  pageItems,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const isTheFirstPage = currentPage === 1;\n  const isTheLastPage = currentPage === totalPages;\n  const pageNumbers = getNumbers(1, totalPages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: isTheFirstPage },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${currentPage}`}\n            aria-disabled={isTheFirstPage}\n            onClick={() => {\n              if (!isTheFirstPage) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(pageNumber => (\n          <li\n            key={pageNumber}\n            className={classNames(\n              'page-item',\n              { active: currentPage === pageNumber },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => {\n                onPageChange(pageNumber);\n              }}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: isTheLastPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${currentPage}`}\n            aria-disabled={isTheLastPage}\n            onClick={() => {\n              if (!isTheLastPage) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {pageItems.map(pageItem => (\n          <li\n            data-cy=\"item\"\n            key={pageItem}\n          >\n            {pageItem}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const totalItems = items.length;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItemNum = (currentPage - 1) * perPage + 1;\n  const lastItemNum = (currentPage * perPage) > totalItems\n    ? totalItems\n    : currentPage * perPage;\n\n  const itemsToShow = items.filter((item, index) => {\n    if (index >= firstItemNum - 1 && index <= lastItemNum - 1) {\n      return item;\n    }\n\n    return 0;\n  });\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {' '}\n        {firstItemNum}\n        {' - '}\n        {lastItemNum}\n        {' '}\n        of\n        {' '}\n        {totalItems}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => {\n          setCurrentPage(page);\n        }}\n        pageItems={itemsToShow}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}